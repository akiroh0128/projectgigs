{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"1rRo8oNqZ-Rj","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1688031575773,"user_tz":-330,"elapsed":18944,"user":{"displayName":"Rohith Gonugunta","userId":"16675692312509292316"}},"outputId":"9d923762-aa88-4fdd-d421-587476fc5482"},"outputs":[{"output_type":"stream","name":"stdout","text":["  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Building wheel for tensorflow-docs (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Colab only includes TensorFlow 2.x; %tensorflow_version has no effect.\n"]}],"source":["# Import libraries\n","!pip install -q git+https://github.com/tensorflow/docs\n","import matplotlib.pyplot as plt\n","import numpy as np\n","import pandas as pd\n","\n","try:\n","  %tensorflow_version 2.x\n","except Exception:\n","  pass\n","import tensorflow as tf\n","\n","from tensorflow import keras\n","from tensorflow.keras import layers\n","\n","import tensorflow_docs as tfdocs\n","import tensorflow_docs.plots\n","import tensorflow_docs.modeling"]},{"cell_type":"code","execution_count":2,"metadata":{"id":"CiX2FI4gZtTt","colab":{"base_uri":"https://localhost:8080/","height":406},"executionInfo":{"status":"ok","timestamp":1688031588083,"user_tz":-330,"elapsed":1347,"user":{"displayName":"Rohith Gonugunta","userId":"16675692312509292316"}},"outputId":"64702b33-660f-4413-8169-cc8814f0b9b2"},"outputs":[{"output_type":"stream","name":"stdout","text":["--2023-06-29 09:39:45--  https://cdn.freecodecamp.org/project-data/health-costs/insurance.csv\n","Resolving cdn.freecodecamp.org (cdn.freecodecamp.org)... 172.67.70.149, 104.26.2.33, 104.26.3.33, ...\n","Connecting to cdn.freecodecamp.org (cdn.freecodecamp.org)|172.67.70.149|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 50264 (49K) [text/csv]\n","Saving to: ‘insurance.csv’\n","\n","insurance.csv       100%[===================>]  49.09K  --.-KB/s    in 0.008s  \n","\n","2023-06-29 09:39:46 (6.27 MB/s) - ‘insurance.csv’ saved [50264/50264]\n","\n"]},{"output_type":"execute_result","data":{"text/plain":["      age     sex   bmi  children smoker     region  expenses\n","1333   50    male  31.0         3     no  northwest  10600.55\n","1334   18  female  31.9         0     no  northeast   2205.98\n","1335   18  female  36.9         0     no  southeast   1629.83\n","1336   21  female  25.8         0     no  southwest   2007.95\n","1337   61  female  29.1         0    yes  northwest  29141.36"],"text/html":["\n","  <div id=\"df-93b19588-9e8e-4914-b8bf-9da2c8e91d9a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>sex</th>\n","      <th>bmi</th>\n","      <th>children</th>\n","      <th>smoker</th>\n","      <th>region</th>\n","      <th>expenses</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1333</th>\n","      <td>50</td>\n","      <td>male</td>\n","      <td>31.0</td>\n","      <td>3</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>10600.55</td>\n","    </tr>\n","    <tr>\n","      <th>1334</th>\n","      <td>18</td>\n","      <td>female</td>\n","      <td>31.9</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northeast</td>\n","      <td>2205.98</td>\n","    </tr>\n","    <tr>\n","      <th>1335</th>\n","      <td>18</td>\n","      <td>female</td>\n","      <td>36.9</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>1629.83</td>\n","    </tr>\n","    <tr>\n","      <th>1336</th>\n","      <td>21</td>\n","      <td>female</td>\n","      <td>25.8</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>southwest</td>\n","      <td>2007.95</td>\n","    </tr>\n","    <tr>\n","      <th>1337</th>\n","      <td>61</td>\n","      <td>female</td>\n","      <td>29.1</td>\n","      <td>0</td>\n","      <td>yes</td>\n","      <td>northwest</td>\n","      <td>29141.36</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-93b19588-9e8e-4914-b8bf-9da2c8e91d9a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-93b19588-9e8e-4914-b8bf-9da2c8e91d9a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-93b19588-9e8e-4914-b8bf-9da2c8e91d9a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":2}],"source":["# Import data\n","!wget https://cdn.freecodecamp.org/project-data/health-costs/insurance.csv\n","dataset = pd.read_csv('insurance.csv')\n","dataset.tail()"]},{"cell_type":"code","source":["#Converting Categorical columns into numerical data\n","CATEGORICAL_COLUMNS = ['sex', 'smoker', 'region']\n","\n","for column in CATEGORICAL_COLUMNS:\n","  dataset[column] = dataset[column].astype('category').cat.codes\n","\n","train_dataset, test_dataset = np.split(dataset, [int(.8 * len(dataset))])"],"metadata":{"id":"QT7aTIOLS-pn","executionInfo":{"status":"ok","timestamp":1688031592403,"user_tz":-330,"elapsed":792,"user":{"displayName":"Rohith Gonugunta","userId":"16675692312509292316"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["train_labels=train_dataset.pop('expenses')\n","test_labels=test_dataset.pop('expenses')"],"metadata":{"id":"dy3DBxI7UqqP","executionInfo":{"status":"ok","timestamp":1688031595679,"user_tz":-330,"elapsed":574,"user":{"displayName":"Rohith Gonugunta","userId":"16675692312509292316"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["#Create a normalizer layer for our model\n","normalizer = layers.experimental.preprocessing.Normalization(axis=-1)\n","normalizer.adapt(np.array(train_dataset))\n"],"metadata":{"id":"OSn62JVOV0yG","executionInfo":{"status":"ok","timestamp":1688031602572,"user_tz":-330,"elapsed":4344,"user":{"displayName":"Rohith Gonugunta","userId":"16675692312509292316"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["#Create the model using keras.Sequential and normalizer\n","model = keras.Sequential([\n","                          normalizer,\n","                          layers.Dense(16),\n","                          layers.Dense(4),\n","                          layers.Dense(1),\n","])\n","\n","model.compile(optimizer=keras.optimizers.Adam(learning_rate=0.1),\n","              loss='mae',\n","              metrics=['mae', 'mse'])\n","model.summary()"],"metadata":{"id":"bMEHqkqMwPA_","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1688031605833,"user_tz":-330,"elapsed":594,"user":{"displayName":"Rohith Gonugunta","userId":"16675692312509292316"}},"outputId":"129dad44-0d85-4e74-f423-b3de4fe814a3"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," normalization (Normalizatio  (None, 6)                13        \n"," n)                                                              \n","                                                                 \n"," dense (Dense)               (None, 16)                112       \n","                                                                 \n"," dense_1 (Dense)             (None, 4)                 68        \n","                                                                 \n"," dense_2 (Dense)             (None, 1)                 5         \n","                                                                 \n","=================================================================\n","Total params: 198\n","Trainable params: 185\n","Non-trainable params: 13\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["#Training the model\n","model.fit(train_dataset, train_labels, epochs=100,validation_split=0.5)"],"metadata":{"id":"si3cabnlwyfa","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1688032153400,"user_tz":-330,"elapsed":16720,"user":{"displayName":"Rohith Gonugunta","userId":"16675692312509292316"}},"outputId":"4eeeaaf5-f2cb-4a23-aa50-61dc14306fc5"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","17/17 [==============================] - 0s 10ms/step - loss: 3600.4084 - mae: 3600.4084 - mse: 48766872.0000 - val_loss: 3308.6960 - val_mae: 3308.6960 - val_mse: 45065936.0000\n","Epoch 2/100\n","17/17 [==============================] - 0s 8ms/step - loss: 3589.9907 - mae: 3589.9907 - mse: 49311316.0000 - val_loss: 3362.3926 - val_mae: 3362.3926 - val_mse: 44585336.0000\n","Epoch 3/100\n","17/17 [==============================] - 0s 8ms/step - loss: 3585.4546 - mae: 3585.4546 - mse: 48037016.0000 - val_loss: 3315.4038 - val_mae: 3315.4038 - val_mse: 45752788.0000\n","Epoch 4/100\n","17/17 [==============================] - 0s 8ms/step - loss: 3549.5903 - mae: 3549.5903 - mse: 49465908.0000 - val_loss: 3295.9111 - val_mae: 3295.9111 - val_mse: 47822564.0000\n","Epoch 5/100\n","17/17 [==============================] - 0s 7ms/step - loss: 3571.8564 - mae: 3571.8564 - mse: 51466784.0000 - val_loss: 3295.3003 - val_mae: 3295.3003 - val_mse: 47063244.0000\n","Epoch 6/100\n","17/17 [==============================] - 0s 9ms/step - loss: 3593.4653 - mae: 3593.4653 - mse: 48155072.0000 - val_loss: 3297.5244 - val_mae: 3297.5244 - val_mse: 44098464.0000\n","Epoch 7/100\n","17/17 [==============================] - 0s 7ms/step - loss: 3593.2827 - mae: 3593.2827 - mse: 50686708.0000 - val_loss: 3335.8655 - val_mae: 3335.8655 - val_mse: 46128884.0000\n","Epoch 8/100\n","17/17 [==============================] - 0s 7ms/step - loss: 3586.9521 - mae: 3586.9521 - mse: 47991648.0000 - val_loss: 3309.0771 - val_mae: 3309.0771 - val_mse: 44871248.0000\n","Epoch 9/100\n","17/17 [==============================] - 0s 8ms/step - loss: 3552.1646 - mae: 3552.1646 - mse: 48056020.0000 - val_loss: 3381.1982 - val_mae: 3381.1982 - val_mse: 48112580.0000\n","Epoch 10/100\n","17/17 [==============================] - 0s 9ms/step - loss: 3584.4766 - mae: 3584.4766 - mse: 49499972.0000 - val_loss: 3299.8560 - val_mae: 3299.8560 - val_mse: 43884616.0000\n","Epoch 11/100\n","17/17 [==============================] - 0s 8ms/step - loss: 3577.3733 - mae: 3577.3733 - mse: 46010196.0000 - val_loss: 3335.0085 - val_mae: 3335.0085 - val_mse: 44039700.0000\n","Epoch 12/100\n","17/17 [==============================] - 0s 10ms/step - loss: 3578.2983 - mae: 3578.2983 - mse: 48821572.0000 - val_loss: 3308.5295 - val_mae: 3308.5293 - val_mse: 45767992.0000\n","Epoch 13/100\n","17/17 [==============================] - 0s 10ms/step - loss: 3558.7922 - mae: 3558.7922 - mse: 50169256.0000 - val_loss: 3299.1001 - val_mae: 3299.1001 - val_mse: 46511084.0000\n","Epoch 14/100\n","17/17 [==============================] - 0s 9ms/step - loss: 3605.4619 - mae: 3605.4619 - mse: 49947280.0000 - val_loss: 3301.9500 - val_mae: 3301.9500 - val_mse: 43437696.0000\n","Epoch 15/100\n","17/17 [==============================] - 0s 9ms/step - loss: 3582.2419 - mae: 3582.2419 - mse: 48015024.0000 - val_loss: 3280.4399 - val_mae: 3280.4399 - val_mse: 47188432.0000\n","Epoch 16/100\n","17/17 [==============================] - 0s 7ms/step - loss: 3554.2751 - mae: 3554.2751 - mse: 49794872.0000 - val_loss: 3298.8176 - val_mae: 3298.8176 - val_mse: 44924796.0000\n","Epoch 17/100\n","17/17 [==============================] - 0s 9ms/step - loss: 3585.4216 - mae: 3585.4216 - mse: 49930720.0000 - val_loss: 3338.5044 - val_mae: 3338.5044 - val_mse: 46986376.0000\n","Epoch 18/100\n","17/17 [==============================] - 0s 7ms/step - loss: 3564.4375 - mae: 3564.4375 - mse: 50579312.0000 - val_loss: 3314.9736 - val_mae: 3314.9736 - val_mse: 46672192.0000\n","Epoch 19/100\n","17/17 [==============================] - 0s 8ms/step - loss: 3579.6411 - mae: 3579.6411 - mse: 49497968.0000 - val_loss: 3325.9104 - val_mae: 3325.9104 - val_mse: 46262948.0000\n","Epoch 20/100\n","17/17 [==============================] - 0s 8ms/step - loss: 3579.6990 - mae: 3579.6990 - mse: 51776920.0000 - val_loss: 3329.2727 - val_mae: 3329.2727 - val_mse: 46509440.0000\n","Epoch 21/100\n","17/17 [==============================] - 0s 8ms/step - loss: 3648.2329 - mae: 3648.2329 - mse: 51097452.0000 - val_loss: 3460.8252 - val_mae: 3460.8252 - val_mse: 42402124.0000\n","Epoch 22/100\n","17/17 [==============================] - 0s 8ms/step - loss: 3675.0410 - mae: 3675.0410 - mse: 42943920.0000 - val_loss: 3377.0625 - val_mae: 3377.0625 - val_mse: 40123600.0000\n","Epoch 23/100\n","17/17 [==============================] - 0s 9ms/step - loss: 3637.2368 - mae: 3637.2368 - mse: 43518640.0000 - val_loss: 3366.4346 - val_mae: 3366.4346 - val_mse: 43062268.0000\n","Epoch 24/100\n","17/17 [==============================] - 0s 7ms/step - loss: 3615.5579 - mae: 3615.5579 - mse: 48459444.0000 - val_loss: 3292.8657 - val_mae: 3292.8657 - val_mse: 47684752.0000\n","Epoch 25/100\n","17/17 [==============================] - 0s 7ms/step - loss: 3565.7104 - mae: 3565.7104 - mse: 50337744.0000 - val_loss: 3297.2861 - val_mae: 3297.2861 - val_mse: 48175440.0000\n","Epoch 26/100\n","17/17 [==============================] - 0s 7ms/step - loss: 3552.8291 - mae: 3552.8291 - mse: 51164072.0000 - val_loss: 3293.5876 - val_mae: 3293.5876 - val_mse: 45288532.0000\n","Epoch 27/100\n","17/17 [==============================] - 0s 8ms/step - loss: 3563.7339 - mae: 3563.7339 - mse: 49824612.0000 - val_loss: 3311.1731 - val_mae: 3311.1731 - val_mse: 45755792.0000\n","Epoch 28/100\n","17/17 [==============================] - 0s 9ms/step - loss: 3554.2971 - mae: 3554.2971 - mse: 49238300.0000 - val_loss: 3327.3081 - val_mae: 3327.3081 - val_mse: 45099596.0000\n","Epoch 29/100\n","17/17 [==============================] - 0s 12ms/step - loss: 3556.6589 - mae: 3556.6589 - mse: 50398320.0000 - val_loss: 3373.7446 - val_mae: 3373.7446 - val_mse: 44136572.0000\n","Epoch 30/100\n","17/17 [==============================] - 0s 12ms/step - loss: 3661.7173 - mae: 3661.7173 - mse: 45595380.0000 - val_loss: 3351.5439 - val_mae: 3351.5439 - val_mse: 40876976.0000\n","Epoch 31/100\n","17/17 [==============================] - 0s 12ms/step - loss: 3638.2310 - mae: 3638.2310 - mse: 46512044.0000 - val_loss: 3380.5164 - val_mae: 3380.5164 - val_mse: 44008208.0000\n","Epoch 32/100\n","17/17 [==============================] - 0s 11ms/step - loss: 3629.6604 - mae: 3629.6604 - mse: 47873168.0000 - val_loss: 3300.7695 - val_mae: 3300.7695 - val_mse: 45607860.0000\n","Epoch 33/100\n","17/17 [==============================] - 0s 11ms/step - loss: 3551.5354 - mae: 3551.5354 - mse: 49175812.0000 - val_loss: 3323.9231 - val_mae: 3323.9231 - val_mse: 47664116.0000\n","Epoch 34/100\n","17/17 [==============================] - 0s 10ms/step - loss: 3584.1765 - mae: 3584.1765 - mse: 49248572.0000 - val_loss: 3306.2866 - val_mae: 3306.2866 - val_mse: 45517536.0000\n","Epoch 35/100\n","17/17 [==============================] - 0s 12ms/step - loss: 3548.9995 - mae: 3548.9995 - mse: 50264316.0000 - val_loss: 3296.2422 - val_mae: 3296.2422 - val_mse: 48403252.0000\n","Epoch 36/100\n","17/17 [==============================] - 0s 11ms/step - loss: 3565.8010 - mae: 3565.8010 - mse: 51183052.0000 - val_loss: 3294.7803 - val_mae: 3294.7803 - val_mse: 44034112.0000\n","Epoch 37/100\n","17/17 [==============================] - 0s 11ms/step - loss: 3563.7341 - mae: 3563.7341 - mse: 48333496.0000 - val_loss: 3306.7527 - val_mae: 3306.7527 - val_mse: 46420296.0000\n","Epoch 38/100\n","17/17 [==============================] - 0s 17ms/step - loss: 3601.8567 - mae: 3601.8567 - mse: 50252696.0000 - val_loss: 3360.9207 - val_mae: 3360.9207 - val_mse: 47609400.0000\n","Epoch 39/100\n","17/17 [==============================] - 0s 18ms/step - loss: 3560.4768 - mae: 3560.4768 - mse: 50475352.0000 - val_loss: 3333.0837 - val_mae: 3333.0837 - val_mse: 45136908.0000\n","Epoch 40/100\n","17/17 [==============================] - 0s 19ms/step - loss: 3599.1821 - mae: 3599.1821 - mse: 49729600.0000 - val_loss: 3322.9915 - val_mae: 3322.9915 - val_mse: 47041412.0000\n","Epoch 41/100\n","17/17 [==============================] - 0s 19ms/step - loss: 3611.8638 - mae: 3611.8638 - mse: 48367644.0000 - val_loss: 3295.2856 - val_mae: 3295.2856 - val_mse: 46197224.0000\n","Epoch 42/100\n","17/17 [==============================] - 0s 11ms/step - loss: 3587.1873 - mae: 3587.1873 - mse: 52528928.0000 - val_loss: 3315.7317 - val_mae: 3315.7317 - val_mse: 45891420.0000\n","Epoch 43/100\n","17/17 [==============================] - 0s 11ms/step - loss: 3565.9446 - mae: 3565.9446 - mse: 47690228.0000 - val_loss: 3323.1768 - val_mae: 3323.1768 - val_mse: 44521128.0000\n","Epoch 44/100\n","17/17 [==============================] - 0s 11ms/step - loss: 3592.0454 - mae: 3592.0454 - mse: 49956572.0000 - val_loss: 3338.4807 - val_mae: 3338.4807 - val_mse: 44812564.0000\n","Epoch 45/100\n","17/17 [==============================] - 0s 10ms/step - loss: 3596.5413 - mae: 3596.5413 - mse: 49135308.0000 - val_loss: 3291.9893 - val_mae: 3291.9893 - val_mse: 45832088.0000\n","Epoch 46/100\n","17/17 [==============================] - 0s 11ms/step - loss: 3574.8716 - mae: 3574.8716 - mse: 49305524.0000 - val_loss: 3339.9917 - val_mae: 3339.9917 - val_mse: 47644696.0000\n","Epoch 47/100\n","17/17 [==============================] - 0s 12ms/step - loss: 3593.9839 - mae: 3593.9839 - mse: 54108360.0000 - val_loss: 3326.3899 - val_mae: 3326.3899 - val_mse: 46096644.0000\n","Epoch 48/100\n","17/17 [==============================] - 0s 11ms/step - loss: 3629.7839 - mae: 3629.7839 - mse: 47207140.0000 - val_loss: 3338.0552 - val_mae: 3338.0552 - val_mse: 42061036.0000\n","Epoch 49/100\n","17/17 [==============================] - 0s 11ms/step - loss: 3615.9299 - mae: 3615.9299 - mse: 45711188.0000 - val_loss: 3320.9231 - val_mae: 3320.9231 - val_mse: 43145340.0000\n","Epoch 50/100\n","17/17 [==============================] - 0s 11ms/step - loss: 3544.7102 - mae: 3544.7102 - mse: 47078328.0000 - val_loss: 3311.6343 - val_mae: 3311.6343 - val_mse: 46815796.0000\n","Epoch 51/100\n","17/17 [==============================] - 0s 12ms/step - loss: 3569.6389 - mae: 3569.6389 - mse: 50755348.0000 - val_loss: 3279.5247 - val_mae: 3279.5247 - val_mse: 47480760.0000\n","Epoch 52/100\n","17/17 [==============================] - 0s 9ms/step - loss: 3567.6831 - mae: 3567.6831 - mse: 50187124.0000 - val_loss: 3299.6689 - val_mae: 3299.6689 - val_mse: 45322808.0000\n","Epoch 53/100\n","17/17 [==============================] - 0s 9ms/step - loss: 3583.2075 - mae: 3583.2075 - mse: 50416832.0000 - val_loss: 3373.5515 - val_mae: 3373.5515 - val_mse: 45728948.0000\n","Epoch 54/100\n","17/17 [==============================] - 0s 8ms/step - loss: 3584.5989 - mae: 3584.5989 - mse: 49209344.0000 - val_loss: 3304.7056 - val_mae: 3304.7056 - val_mse: 44539036.0000\n","Epoch 55/100\n","17/17 [==============================] - 0s 7ms/step - loss: 3558.4102 - mae: 3558.4102 - mse: 49814300.0000 - val_loss: 3306.6519 - val_mae: 3306.6519 - val_mse: 48106240.0000\n","Epoch 56/100\n","17/17 [==============================] - 0s 10ms/step - loss: 3563.1731 - mae: 3563.1731 - mse: 49271184.0000 - val_loss: 3349.4961 - val_mae: 3349.4961 - val_mse: 47259896.0000\n","Epoch 57/100\n","17/17 [==============================] - 0s 9ms/step - loss: 3552.8594 - mae: 3552.8594 - mse: 49416768.0000 - val_loss: 3322.2766 - val_mae: 3322.2766 - val_mse: 48008192.0000\n","Epoch 58/100\n","17/17 [==============================] - 0s 9ms/step - loss: 3586.8276 - mae: 3586.8276 - mse: 50209952.0000 - val_loss: 3312.8237 - val_mae: 3312.8237 - val_mse: 45276176.0000\n","Epoch 59/100\n","17/17 [==============================] - 0s 7ms/step - loss: 3617.3311 - mae: 3617.3311 - mse: 47369252.0000 - val_loss: 3343.2798 - val_mae: 3343.2798 - val_mse: 43967584.0000\n","Epoch 60/100\n","17/17 [==============================] - 0s 7ms/step - loss: 3578.4497 - mae: 3578.4497 - mse: 49831000.0000 - val_loss: 3330.5027 - val_mae: 3330.5027 - val_mse: 46545372.0000\n","Epoch 61/100\n","17/17 [==============================] - 0s 7ms/step - loss: 3557.8696 - mae: 3557.8696 - mse: 50515344.0000 - val_loss: 3386.8145 - val_mae: 3386.8145 - val_mse: 44088040.0000\n","Epoch 62/100\n","17/17 [==============================] - 0s 9ms/step - loss: 3595.1707 - mae: 3595.1707 - mse: 46979536.0000 - val_loss: 3324.4678 - val_mae: 3324.4678 - val_mse: 43366676.0000\n","Epoch 63/100\n","17/17 [==============================] - 0s 9ms/step - loss: 3612.7712 - mae: 3612.7712 - mse: 51047676.0000 - val_loss: 3295.2002 - val_mae: 3295.2002 - val_mse: 47403856.0000\n","Epoch 64/100\n","17/17 [==============================] - 0s 9ms/step - loss: 3555.9338 - mae: 3555.9338 - mse: 49994284.0000 - val_loss: 3315.9094 - val_mae: 3315.9094 - val_mse: 45099628.0000\n","Epoch 65/100\n","17/17 [==============================] - 0s 9ms/step - loss: 3568.7446 - mae: 3568.7446 - mse: 48839524.0000 - val_loss: 3311.5654 - val_mae: 3311.5654 - val_mse: 46035660.0000\n","Epoch 66/100\n","17/17 [==============================] - 0s 9ms/step - loss: 3570.3206 - mae: 3570.3206 - mse: 49536080.0000 - val_loss: 3305.4578 - val_mae: 3305.4578 - val_mse: 45707528.0000\n","Epoch 67/100\n","17/17 [==============================] - 0s 7ms/step - loss: 3562.0427 - mae: 3562.0427 - mse: 50959192.0000 - val_loss: 3322.2136 - val_mae: 3322.2136 - val_mse: 46630500.0000\n","Epoch 68/100\n","17/17 [==============================] - 0s 9ms/step - loss: 3593.2593 - mae: 3593.2593 - mse: 49678036.0000 - val_loss: 3315.3340 - val_mae: 3315.3340 - val_mse: 46621596.0000\n","Epoch 69/100\n","17/17 [==============================] - 0s 9ms/step - loss: 3609.3882 - mae: 3609.3882 - mse: 50549092.0000 - val_loss: 3319.6223 - val_mae: 3319.6223 - val_mse: 47759972.0000\n","Epoch 70/100\n","17/17 [==============================] - 0s 7ms/step - loss: 3643.8850 - mae: 3643.8850 - mse: 48147200.0000 - val_loss: 3349.8196 - val_mae: 3349.8196 - val_mse: 45832136.0000\n","Epoch 71/100\n","17/17 [==============================] - 0s 7ms/step - loss: 3603.9456 - mae: 3603.9456 - mse: 50693232.0000 - val_loss: 3325.3555 - val_mae: 3325.3555 - val_mse: 48823236.0000\n","Epoch 72/100\n","17/17 [==============================] - 0s 9ms/step - loss: 3572.0603 - mae: 3572.0603 - mse: 50666004.0000 - val_loss: 3323.0020 - val_mae: 3323.0020 - val_mse: 45887852.0000\n","Epoch 73/100\n","17/17 [==============================] - 0s 9ms/step - loss: 3572.8420 - mae: 3572.8420 - mse: 48462044.0000 - val_loss: 3355.7812 - val_mae: 3355.7812 - val_mse: 45815828.0000\n","Epoch 74/100\n","17/17 [==============================] - 0s 9ms/step - loss: 3564.5376 - mae: 3564.5376 - mse: 48289940.0000 - val_loss: 3299.9041 - val_mae: 3299.9041 - val_mse: 44548140.0000\n","Epoch 75/100\n","17/17 [==============================] - 0s 9ms/step - loss: 3555.9341 - mae: 3555.9341 - mse: 50296088.0000 - val_loss: 3276.7563 - val_mae: 3276.7563 - val_mse: 47361792.0000\n","Epoch 76/100\n","17/17 [==============================] - 0s 8ms/step - loss: 3597.8184 - mae: 3597.8184 - mse: 49935136.0000 - val_loss: 3315.0742 - val_mae: 3315.0742 - val_mse: 45497200.0000\n","Epoch 77/100\n","17/17 [==============================] - 0s 7ms/step - loss: 3561.9548 - mae: 3561.9548 - mse: 47631040.0000 - val_loss: 3312.7515 - val_mae: 3312.7515 - val_mse: 45098420.0000\n","Epoch 78/100\n","17/17 [==============================] - 0s 7ms/step - loss: 3628.4014 - mae: 3628.4014 - mse: 51334244.0000 - val_loss: 3302.9133 - val_mae: 3302.9133 - val_mse: 46398384.0000\n","Epoch 79/100\n","17/17 [==============================] - 0s 7ms/step - loss: 3572.4971 - mae: 3572.4971 - mse: 49399680.0000 - val_loss: 3305.9395 - val_mae: 3305.9395 - val_mse: 45595860.0000\n","Epoch 80/100\n","17/17 [==============================] - 0s 7ms/step - loss: 3562.5137 - mae: 3562.5137 - mse: 49359252.0000 - val_loss: 3363.2131 - val_mae: 3363.2131 - val_mse: 48291700.0000\n","Epoch 81/100\n","17/17 [==============================] - 0s 7ms/step - loss: 3586.8203 - mae: 3586.8203 - mse: 50016048.0000 - val_loss: 3297.4194 - val_mae: 3297.4194 - val_mse: 48229148.0000\n","Epoch 82/100\n","17/17 [==============================] - 0s 7ms/step - loss: 3562.1780 - mae: 3562.1780 - mse: 50526724.0000 - val_loss: 3312.5571 - val_mae: 3312.5571 - val_mse: 45233408.0000\n","Epoch 83/100\n","17/17 [==============================] - 0s 9ms/step - loss: 3578.8911 - mae: 3578.8911 - mse: 50164132.0000 - val_loss: 3393.3254 - val_mae: 3393.3254 - val_mse: 44289916.0000\n","Epoch 84/100\n","17/17 [==============================] - 0s 8ms/step - loss: 3607.3962 - mae: 3607.3962 - mse: 47058008.0000 - val_loss: 3391.0027 - val_mae: 3391.0027 - val_mse: 41992012.0000\n","Epoch 85/100\n","17/17 [==============================] - 0s 7ms/step - loss: 3634.3618 - mae: 3634.3618 - mse: 46085236.0000 - val_loss: 3315.3867 - val_mae: 3315.3867 - val_mse: 43190612.0000\n","Epoch 86/100\n","17/17 [==============================] - 0s 7ms/step - loss: 3575.7766 - mae: 3575.7766 - mse: 48028128.0000 - val_loss: 3303.7886 - val_mae: 3303.7886 - val_mse: 46552300.0000\n","Epoch 87/100\n","17/17 [==============================] - 0s 7ms/step - loss: 3600.9980 - mae: 3600.9980 - mse: 52744508.0000 - val_loss: 3309.5730 - val_mae: 3309.5730 - val_mse: 45221504.0000\n","Epoch 88/100\n","17/17 [==============================] - 0s 7ms/step - loss: 3608.4756 - mae: 3608.4756 - mse: 45715664.0000 - val_loss: 3359.6477 - val_mae: 3359.6477 - val_mse: 41472944.0000\n","Epoch 89/100\n","17/17 [==============================] - 0s 9ms/step - loss: 3597.6436 - mae: 3597.6436 - mse: 43252564.0000 - val_loss: 3321.6836 - val_mae: 3321.6836 - val_mse: 42232836.0000\n","Epoch 90/100\n","17/17 [==============================] - 0s 9ms/step - loss: 3580.2490 - mae: 3580.2490 - mse: 47542232.0000 - val_loss: 3312.2212 - val_mae: 3312.2212 - val_mse: 48459052.0000\n","Epoch 91/100\n","17/17 [==============================] - 0s 9ms/step - loss: 3559.8740 - mae: 3559.8740 - mse: 50358348.0000 - val_loss: 3314.4814 - val_mae: 3314.4814 - val_mse: 45753088.0000\n","Epoch 92/100\n","17/17 [==============================] - 0s 8ms/step - loss: 3561.3071 - mae: 3561.3071 - mse: 48452420.0000 - val_loss: 3306.7131 - val_mae: 3306.7131 - val_mse: 47071876.0000\n","Epoch 93/100\n","17/17 [==============================] - 0s 7ms/step - loss: 3564.9241 - mae: 3564.9241 - mse: 49783528.0000 - val_loss: 3311.7766 - val_mae: 3311.7766 - val_mse: 45485336.0000\n","Epoch 94/100\n","17/17 [==============================] - 0s 8ms/step - loss: 3573.7163 - mae: 3573.7163 - mse: 47409492.0000 - val_loss: 3301.5361 - val_mae: 3301.5361 - val_mse: 46230584.0000\n","Epoch 95/100\n","17/17 [==============================] - 0s 7ms/step - loss: 3586.8279 - mae: 3586.8279 - mse: 52275244.0000 - val_loss: 3282.1567 - val_mae: 3282.1567 - val_mse: 47917628.0000\n","Epoch 96/100\n","17/17 [==============================] - 0s 7ms/step - loss: 3581.4038 - mae: 3581.4038 - mse: 46342924.0000 - val_loss: 3328.9104 - val_mae: 3328.9104 - val_mse: 42683384.0000\n","Epoch 97/100\n","17/17 [==============================] - 0s 9ms/step - loss: 3559.4158 - mae: 3559.4158 - mse: 46231832.0000 - val_loss: 3301.6121 - val_mae: 3301.6121 - val_mse: 44316652.0000\n","Epoch 98/100\n","17/17 [==============================] - 0s 7ms/step - loss: 3550.2485 - mae: 3550.2485 - mse: 49342420.0000 - val_loss: 3293.6294 - val_mae: 3293.6294 - val_mse: 47465996.0000\n","Epoch 99/100\n","17/17 [==============================] - 0s 7ms/step - loss: 3570.6194 - mae: 3570.6194 - mse: 49053784.0000 - val_loss: 3296.7144 - val_mae: 3296.7144 - val_mse: 45663288.0000\n","Epoch 100/100\n","17/17 [==============================] - 0s 7ms/step - loss: 3579.9912 - mae: 3579.9912 - mse: 49294420.0000 - val_loss: 3329.9519 - val_mae: 3329.9519 - val_mse: 45344328.0000\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7fb5704d2f50>"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","execution_count":11,"metadata":{"id":"Xe7RXH3N3CWU","colab":{"base_uri":"https://localhost:8080/","height":509},"executionInfo":{"status":"ok","timestamp":1688031700740,"user_tz":-330,"elapsed":853,"user":{"displayName":"Rohith Gonugunta","userId":"16675692312509292316"}},"outputId":"bbf99c20-7998-4b0e-c63a-efd3e68df575"},"outputs":[{"output_type":"stream","name":"stdout","text":["9/9 - 0s - loss: 3608.1072 - mae: 3608.1072 - mse: 44396788.0000 - 44ms/epoch - 5ms/step\n","Testing set Mean Abs Error: 3608.11 expenses\n","9/9 [==============================] - 0s 2ms/step\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# Testing model by checking how well the model generalizes using the test set.\n","loss, mae, mse = model.evaluate(test_dataset, test_labels, verbose=2)\n","\n","print(\"Testing set Mean Abs Error: {:5.2f} expenses\".format(mae))\n","\n","# Plot predictions.\n","test_predictions = model.predict(test_dataset).flatten()\n","\n","a = plt.axes(aspect='equal')\n","plt.scatter(test_labels, test_predictions)\n","plt.xlabel('True values (expenses)')\n","plt.ylabel('Predictions (expenses)')\n","lims = [0, 50000]\n","plt.xlim(lims)\n","plt.ylim(lims)\n","_ = plt.plot(lims,lims)\n"]}],"metadata":{"colab":{"provenance":[{"file_id":"https://github.com/freeCodeCamp/boilerplate-linear-regression-health-costs-calculator/blob/master/fcc_predict_health_costs_with_regression.ipynb","timestamp":1687781971942}],"gpuType":"T4"},"kernelspec":{"display_name":"Python 3","name":"python3"},"accelerator":"GPU"},"nbformat":4,"nbformat_minor":0}